{% extends "base.jinja" %}

{% block head_content %}
<script src="http://code.jquery.com/jquery-2.1.4.js"></script>
<script src="/static/bower_components/handsontable/dist/handsontable.full.js"></script>
<link rel="stylesheet" media="screen" href="/static/bower_components/handsontable/dist/handsontable.full.css">
{% endblock %}

{% block page_content %}

<h2>Step 2: Review data and copy into database</h2>

{% if edata_obj %}
<p>We have extracted the data from page {{edata_obj.metadata['source_pagenum']}} of the document "<i>{{edata_obj.document.description}}</i>"</b>

<p>Please copy appropriate information from here into the table at the bottom. When you have finished, click the button at the bottom to upload it into the Openoil database.</p>

<p>You may also wish to <a href="{{edata_obj.document.source_url}}" target="_blank">consult the original document</a></p>
{% endif %}

<h3>Data Extracted from PDF</h3>
<div id="extracted_data"></div>

<h3>Add the correct data here</h3>
<div id="output"></div>
<input type="submit" value="Upload Data" class="submit_sheet"/>
<script>

// extracted data
var edata = {{ edata_json | safe }};

var data = {{ tabledata|safe }};

var autocomplete_companies = {{ autocomplete_companies | safe }};
var autocomplete_projects = {{ autocomplete_projects | safe }};
var autocomplete_otherfields = {{ autocomplete_otherfields | safe }};


var render_firstrow = function(instance,td,row,col,prop,value,cellProperties){
    Handsontable.renderers.TextRenderer.apply(this,arguments); // ??? - cargo-culted from the docs
    td.style.fontWeight = 'bold';
    td.style.background = '#bbbbbb';
}

var ed_hot = new Handsontable(document.getElementById('extracted_data'), {
    data: edata['data'],
    minSpareRows: 1,
    rowHeaders: true,
    colHeaders: true});

var hot = new Handsontable(document.getElementById('output'), {
  data: data,
  minSpareRows: 10,
  beforeChange: function(changes, source){
	  // convert number-strings like "42,000" into numbers
	  // on numeric columns only
	  
      for(i in changes){
		  change = changes[i] // [row,column, 'before', 'after']		  
		  if(this.getCellMeta(change[0], change[1])['type'] == 'numeric'){
			  // numeral.js turns non-numeric input into 0
			  // so we turn 0s back into the original string
			  // (which just means a pointless round-trip if the input
			  // really is 0)
			  change[3] = numeral(change[3]).value() || change[3];
			  }
      }
  },
	
  rowHeaders: true,
  colHeaders: true,
    contextMenu: true,
    cells: function(row, col, prop){
	var cellProperties = {};
	if(row==0){
	    cellProperties.renderer = render_firstrow;
	    cellProperties.readOnly = true;
	}
	else if(col==0){
	    cellProperties.type = 'autocomplete';
	    cellProperties.source = autocomplete_projects;
	    cellProperties.strict = false;
	}
	else if(col==1){
	    cellProperties.type = 'autocomplete';
	    cellProperties.source = autocomplete_companies;
	    cellProperties.strict = false;
	}
	else{
	    header = data[0][col].toLowerCase();
	    if(autocomplete_otherfields[header]){
		cellProperties.type = 'autocomplete';
		cellProperties.source = autocomplete_otherfields[header];
		cellProperties.strict = false;

	    }
	    numeric_fields = ['level',];
	    if(numeric_fields.indexOf(header) > -1){
		cellProperties.type = 'numeric';
	    }
	    
	}

	return cellProperties
    }
	    
});


var save_contents = function(){
    console.log('save_contents');
    data_for_post = {
	    'metadata': JSON.stringify(
		{'type': 'production',

		 {% if edata_obj %}
		 'edata_id': {{edata_obj.id}},
		 {% endif %}

		 
		}),
	    'tabledata': JSON.stringify(hot.getData()),
	    'csrfmiddlewaretoken': '{{csrf_token}}',
	},

    $.ajax({
	'url': '/data/add/json/',
	'type': 'POST',
	'data': data_for_post,
	'success': function(json){
	    alert('the data has been successfully added to the DB');},
    });
    data = hot.getData();
}
$('.submit_sheet').click(save_contents);


</script>


{% endblock %}
